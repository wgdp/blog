---
import ogs from 'open-graph-scraper'

interface Props {
  url: string
  title?: string
  image?: string
  description?: string
}

const { url, title, image, description } = Astro.props

async function getOpenGraphData(url: string) {
  const options = { url }
  try {
    const { result } = await ogs(options)
    return result
  } catch (error: any) {
    // 404エラーの場合簡素なエラーメッセージを出すだけにする
    if (error.result.error === "404 Not Found") {
      console.warn('error.result.error =>', error.result.requestUrl)
    }
    console.error('Error fetching Open Graph Data:', error)
    return {}
  }
}

const origin = new URL(url).origin;
const websiteData = await getOpenGraphData(url);
const ogImage = image || websiteData?.ogImage?.[0]?.url || null
const ogTitle = title || websiteData?.ogTitle || 'タイトルの取得に失敗しました'
const ogDescription = description || websiteData?.ogDescription || ''
---


<a href={url} target="_blank" class="not-prose">
  <div class="grid max-w-full grid-cols-[30%_1fr_5px] gap-4 rounded-md border border-nord-6 text-nord-1 transition-colors duration-200 hover:bg-nord-6">
    <div class="h-32 overflow-hidden">
      <img src={ogImage} loading="lazy" class="object-cover object-center h-full w-full rounded-s-md"/>
    </div>
    <div class="flex flex-col flex-1 py-2 pe-0">
      <strong class="md:text-lg text-sm font-black text-nord-0 mb-2 line-clamp-2 leading-tight">{ogTitle}</strong>
      <p class="text-xs md:line-clamp-2 line-clamp-3 leading-tight">{ogDescription}</p>
      <span class="text-xs line-clamp-1 md:mt-5 mt-2">{origin}</span>
    </div>
  </div>
</a>